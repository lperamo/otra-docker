# Load the dynamic modules
load_module /usr/lib/nginx/modules/ngx_http_headers_more_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

user www-data;
worker_processes 1;

events {
  worker_connections 1024;
}

http {
  quic_retry on;
  quic_gso on;
  types_hash_max_size 2048;
  variables_hash_max_size 2048;

  include mime.types;
  default_type application/octet-stream;
  
  # Inclusion of personalized configurations
  include snippets/cache.conf;

  # HTTP redirection to HTTPS
  server {
    listen 80;
    listen [::]:80;
    server_name __DOMAIN_NAME_DEV__;

    return 301 https://$host$request_uri; # Redirection
  }

  # Server HTTPS with HTTP/2 and HTTP/3
  server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    listen 443 quic;
    listen [::]:443 quic;
    add_header Alt-Svc 'h3=":443"; ma=86400'; # Announces HTTP/3

    # Dynamic variable for the configuration
    set $rootPath __APP_ROOT__;
    index indexDev.php;

    server_name __DOMAIN_NAME_DEV__;

    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    root $rootPath/web;   

    # SSL Certificates
    ssl_certificate __CERT_PATH__/nginx-selfsigned.crt;
    ssl_certificate_key __CERT_PATH__/nginx-selfsigned.key;

    include snippets/security.conf;

    # Block hotlinking (others that steal our bandwidth and assets)
    valid_referers none blocked ~.google. ~.bing. ~.yahoo. ~.stripe.com __DOMAIN_NAME__ *.__DOMAIN_NAME__ localhost;

    if ($invalid_referer)
    {
      return 403;
    }

    # Brotli compression and disables gzip
    brotli on;
    brotli_comp_level 7;
    brotli_static always;
    gzip off;

    # Handling the compressed web manifest
    location ~ /manifest\.br
    {
      if ($http_referer = "")
      {
        return 403;
      }

      types
      {
        application/manifest+json br;
      }

      brotli_types application/manifest+json;
      add_header Content-Encoding br;
      add_header Cache-Control $cache_control;
    }

    # CSS and JS management
    location ~ /(bundles|vendor)/.*\.(css|js|ts)$
    {
      root $rootPath;
      add_header Cache-Control $cache_control;
    }

    # Handling CSS (print)
    location ~ /printCss/.*\.css\.br$
    {
      if ($http_referer = "")
      {
        return 403;
      }

      types
      {
        text/css br;
      }

      brotli_types text/css;
      add_header Content-Encoding br;
      add_header Cache-Control $cache_control;
    }

    # Handling CSS and JS source maps
    location ~ /(bundles|vendor)/.*\.(css|js)\.map$
    {
      types
      {
        application/json map;
      }

      root $rootPath;
      add_header Cache-Control $cache_control;
    }

    # Handling service worker, robots.txt and sitemaps
    location ~ /.*\.(css|js|txt|xml)$
    {
      if ($http_referer = "")
      {
        return 403;
      }
    }

    # Static files management
    location ~ /.*\.(avif|ico|jpe?g|png|svg|webp|woff2|mp3)$
    {
      set $referer $http_referer;
      set $isSafe 0;

      # Exceptions for some kind of images
      if ($uri ~ "^/(favicon|apple-touch).*\.png$")
      {
        set $referer https://$server_name/;
      }

      if ($uri ~ "^/images/meta/.*(og-twitter-card|og-facebook).*\.(avif|jpg|png|webp)$")
      {
        set $referer https://$server_name/;
        set $isSafe 1;
      }

      if ($http_user_agent !~ ".*Firefox.*")
      {
        set $referer $http_referer;
      }

      if ($referer != "")
      {
        set $isSafe 1;
      }

      if ($isSafe = 0)
      {
        return 403;
      }

      # Handle vendor images
      if ($uri ~ "^/vendor.*$")
      {
        root $rootPath;
      }

      add_header Cache-Control $cache_control;
    }

    # Rewriting for the index file
    location /
    {
      rewrite ^ /indexDev.php last;
    }

    # PHP files management
    location ~ \.php
    {
      include snippets/fastcgi-php.conf;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_pass __FASTCGI_HOST__:__FASTCGI_PORT__;

      fastcgi_param APP_ENV dev;
    }
  }
}
